// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?   // Only for credential users
  accounts      Account[]
  sessions      Session[]
  movies        Movie[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                 Int     @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  posterUrl   String?
  watched     Boolean  @default(false)
  rating      Int?
  genreId     Int
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  genre Genre @relation(fields: [genreId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String
  movies Movie[]
}